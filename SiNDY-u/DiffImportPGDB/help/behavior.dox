/**
@page behavior 挙動について

 <b>一連の処理の流れ</b>

 <ol>
 <li> DB_ANY で指定した接続情報でDBへ接続します
   - PGDB、FGDBインポートモードであればPGDB、FGDBであることを確認します
   - 通常はSDEであることを確認します

 <li> WORKVERSION で指定した名前の子バージョンを探します
   - 存在しない場合は作成します
   - バージョン非対応でも、バージョン非対応モードであれば無理やりインポートします
   - PGDB、FGDBインポートモードであれば、直接DB_ANYで指定したDBにインポートします
   - 以下、この子バージョンをSDEと呼びます
 
 <li> 指定メッシュのメッシュポリゴンを1つ取得します
   - リストに記述されている順に処理されます

 <li> 対象のオブジェクトについて、新旧PGDB間の差分を確認します

 <li> 新旧PGDB間で差分があったオブジェクトのORG_OBJIDからSDEの更新対象を探します
   - このとき、国内優先モードかつ旧PGDBとSDEの間で差分がある場合、そのオブジェクトは処理を飛ばします

 <li> 形状変更、属性変更を行います
   - テストモードでは形状変更、属性変更が行われるかどうかの確認のみ行います
   - ここで一度保存(Store)されます

 <li> ポリゴンの場合、メッシュ境界マージを行います
   - このとき、マルチパート解消及び、不要な構成点の削除も行います
   - テストモードではマージその他の処理が行われるかどうかの確認のみ行います
   - 各処理ごとに保存(Store)されます

 <li> 次のメッシュを取得します
   - 以下繰り返し

 <li> 最後のメッシュまで処理が終われば編集を保存・終了(StopEditing)します
 </ol>

 <b>iPC共通属性の更新</b>
 
 以下の属性は拡張子オプションによらず更新される

 - 最終更新者
   - ツール実行時に指定した値が入ります
 @verbatim
 set OPERATOR=DiffImport_20140401
 @endverbatim
 - 作業目的
   - 元々持っている場合、それがコピーされます
   - 新規追加の場合、0が入ります
 - 最終更新内容
   - コード値 5 (上海データインポート)が入ります
 - 最終プログラム更新日時
   - そのオブジェクトの更新時の年月日・時刻が入ります
 - 最終更新プログラム名
   - "DiffImportPGDB"が入ります
 - ユーザクレームフラグ
   - 元々持っている場合、それがコピーされます
   - 新規追加の場合、0が入ります
 - 情報ソース
   - 元々持っている場合、それがコピーされます
   - 新規追加の場合、何も入れません

 <b>POI_POINTの更新</b>

 POI_POINT(Export_POI_POINT)のインポートでは特殊対応を行っています
 - インポート属性は下記の通り
   - 緯度・経度(ジオメトリ)
   - 有効日付
   - 編集者・編集日
   - 検証舎・検証日
 - インポート条件 (上から順に確認をしていきます)
   - SDE上に該当OBJECTIDのポイントが存在する
   - エクスポート時からSDE上で移動されていない
   - SDE上で「削除」となっていない
   - <b>→ 形状を変更(移動)する</b>
   - <b>→ 編集者・編集完了日を変更する</b>
   - SDEのポイントが「未検証」でない
   - <b>→ 検証者・検証完了日を変更する</b>
   - SDEのポイントの有効日付が指定の日付より前
   - SDEのポイントの有効日付がエクスポート時から変わっていない
   - <b>→ 有効日付を変更する</b>

*/