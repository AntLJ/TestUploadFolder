/*
 * Copyright (C) INCREMENT P CORP. All Rights Reserved.
 *
 * THIS SOFTWARE IS PROVIDED BY INCREMENT P CORP., WITHOUT WARRANTY OF
 * ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
 * AND NONINFRINGEMENT.
 *
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDER BE LIABLE FOR ANY
 * CLAIM, DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING
 * OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.
*/

// This file was generated by WTL Dialog wizard 
// PlogressDlg.h : Declaration of the CPlogressDlg

#pragma once

#include "resource.h"       // main symbols
#include "atlctrls.h"

// CPlogressDlg

class CPlogressDlg : 
	public CDialogImpl<CPlogressDlg>	
{
public:
	CPlogressDlg();
	~CPlogressDlg();
	enum { IDD = IDD_PROGRESS_DLG };

    BEGIN_MSG_MAP(CPlogressDlg)
		MESSAGE_HANDLER(WM_INITDIALOG, OnInitDialog)
        //COMMAND_HANDLER(IDOK, BN_CLICKED, OnClickedOK)
        //COMMAND_HANDLER(IDCANCEL, BN_CLICKED, OnClickedCancel)
    END_MSG_MAP()
    // Handler prototypes:
    //  LRESULT MessageHandler(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled);
    //  LRESULT CommandHandler(WORD wNotifyCode, WORD wID, HWND hWndCtl, BOOL& bHandled);
    //  LRESULT NotifyHandler(int idCtrl, LPNMHDR pnmh, BOOL& bHandled);
	LRESULT OnInitDialog(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled);
	//LRESULT OnClickedOK(WORD wNotifyCode, WORD wID, HWND hWndCtl, BOOL& bHandled);
	//LRESULT OnClickedCancel(WORD wNotifyCode, WORD wID, HWND hWndCtl, BOOL& bHandled);

	void SetPos(int n ){ m_cProgres.SetPos(n); PumpMessages();}
	void SetRange(int nStart, int nEnd ){ m_cProgres.SetRange32( nStart, nEnd ); m_cProgres.SetPos(nStart);}
	void OffsetPos( int n ){ m_cProgres.OffsetPos(n); PumpMessages();}
	void SetMsg( LPCTSTR lpcszMsg ){ m_cStaticEdit.SetWindowText( lpcszMsg ); UpdateWindow(); PumpMessages();}
	void PumpMessages();

public:
	CProgressBarCtrl m_cProgres;
	CEdit m_cStaticEdit;
};


